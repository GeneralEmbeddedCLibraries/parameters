////////////////////////////////////////////////////////////////////////////////
/**
*@file      par_cfg.c
*@brief     Configuration for device parameters
*@author    Ziga Miklosic
*@date      22.05.2021
*@version	V1.0.0
*/
////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup PAR_CFG
* @{ <!-- BEGIN GROUP -->
*
* 	Configuration for device parameters
*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include "par_cfg.h"

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////

/**
 *	Parameters definitions
 *
 *	@note	User shall fill up wanted parameter definitions!
 */
static const par_cfg_t g_par_settings[ePAR_NUM_OF] =
{
	{	.id = 0, .name = "Test1", .type = ePAR_TYPE_U8, .min = 0, .max = 120, .init = 34, .unit="mV", .access = ePAR_ACCESS_RW, .persistant = false },
	{	.id = 1, .name = "Test2", .type = ePAR_TYPE_U8, .min = 0, .max = 120, .init = 34, .unit="mV", .access = ePAR_ACCESS_RW, .persistant = false },
	{	.id = 2, .name = "Test1", .type = ePAR_TYPE_U8, .min = 0, .max = 120, .init = 34, .unit="mV", .access = ePAR_ACCESS_RW, .persistant = false },
};


////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////


const par_cfg_t * par_cfg_get_cfg_table(void)
{
	return (const par_cfg_t*) ( &g_par_settings );
}


////////////////////////////////////////////////////////////////////////////////
/**
* @} <!-- END GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////
